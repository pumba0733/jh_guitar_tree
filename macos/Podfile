platform :macos, '13.0'
ENV['MACOSX_DEPLOYMENT_TARGET'] = '13.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'ephemeral', 'Flutter-Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure \"flutter pub get\" is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter-Generated.xcconfig, then run \"flutter pub get\""
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_macos_podfile_setup

target 'Runner' do
  use_frameworks! :linkage => :dynamic

  flutter_install_all_macos_pods File.dirname(File.realpath(__FILE__))

  
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_macos_build_settings(target)

    target.build_configurations.each do |config|
      config.build_settings['MACOSX_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['ARCHS'] = 'arm64'
    end
  end

  # ✅ -G 제거 루틴
  begin
    if Dir.exist?('Pods')
      require 'find'
      Find.find('Pods') do |path|
        if path =~ /\.(xcconfig|rsp|sh|modulemap|cpp)$/
          text = File.read(path)
          new_contents = text.gsub(/(?<=^|\s)-G(?=\s|$)/, '')
          File.open(path, "w") { |file| file.puts new_contents }
        end
      end
    end
  rescue => e
    puts "⚠️ Skipping -G cleanup: #{e.message}"
  end

  # ✅ remove_g_flag.sh 실행
  system("bash #{__dir__}/remove_g_flag.sh")
end
